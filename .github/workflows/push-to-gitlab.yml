name: Build and push to CBA GitLab

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Build static site
        env:
          NEXT_PUBLIC_TARGET_URL: "https://fab.cba.mit.edu/classes/863.25/people/HayleyBloch/"
          NEXT_PUBLIC_BASE_PATH: "/classes/863.25/people/HayleyBloch"
          DEPLOY_BASE_PATH: "/classes/863.25/people/HayleyBloch"
        run: |
          npm ci
          # Build web and desktop and assemble a single static output at repo-root public/
          npm run build:static
          # verify output
          test -d public

      - name: Clone GitLab destination (shallow)
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          if [ -z "${GITLAB_TOKEN:-}" ]; then echo "GITLAB_ACCESS_TOKEN secret is missing"; exit 1; fi
          # If your GitLab instance requires the :846 HTTPS port, include it here (this repo's remote uses it).
          # Use the Fab Academy web host (fab.cba.mit.edu) as the target repository host
          GURL="https://oauth2:${GITLAB_TOKEN}@fab.cba.mit.edu:846/classes/863.25/people/HayleyBloch.git"
          git clone --depth=1 --branch main "$GURL" gitlab-repo || (
            git clone --depth=1 "$GURL" gitlab-repo && cd gitlab-repo && git checkout -b main || true
          )

      - name: Sync build output -> GitLab repo and push if changed
        env:
          COMMITTER_NAME: "Hayley Bloch"
          COMMITTER_EMAIL: "hayleybl@mit.edu"
        run: |
          set -euo pipefail
          export GIT_TERMINAL_PROMPT=0

          # copy build output into the checked-out gitlab repo
          rsync -av --delete public/ gitlab-repo/

          # Ensure repository-level files are also present in the GitLab repo
          # (copy CI config and agreement if they exist at repo root)
          if [ -f ../.gitlab-ci.yml ]; then cp ../.gitlab-ci.yml gitlab-repo/.gitlab-ci.yml; fi
          if [ -f ../agreement.md ]; then cp ../agreement.md gitlab-repo/agreement.md; fi

          cd gitlab-repo
          git config user.name "${COMMITTER_NAME}"
          git config user.email "${COMMITTER_EMAIL}"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "${{ github.event.head_commit.message || 'Site update from GitHub Actions' }}"
          git push origin main
